name: Release to GitHub Container Registry

on:
  pull_request:
    branches:
      - main
    types:
      - opened
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"                  # Semantic versioning (e.g., v1.0.0, v2.3.4)
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"      # Pre-release (e.g., v1.1.0-beta.1, v2.0.0-beta.2)

env:
  REPO: ghcr.io/remla2024-team14/app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract version
        id: version
        run: echo "::set-output name=version::${GITHUB_REF#refs/tags/}"

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t app .
      
      - name: Parse semantic version from tag
        run: |
          VERSION=${GITHUB_REF:11}
          echo "version:$VERSION" >> $GITHUB_ENV
          MAJOR=`echo "$VERSION" | cut -d . -f 1`
          MINOR=`echo "$VERSION" | cut -d . -f 2`
          PATCH=`echo "$VERSION" | cut -d . -f 3`
          echo "version_major:$MAJOR" >> $GITHUB_ENV
          echo "version_minor:$MINOR" >> $GITHUB_ENV
          echo "version_patch:$PATCH" >> $GITHUB_ENV


      - name: Tag Docker image with distinct versions
        run: |
          IMG=ghcr.io/${{ github.repository }}
          docker tag app $IMG:${{ env.version }}
          docker tag app $IMG:latest
          docker tag app $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest
          docker tag app $IMG:${{ env.version_major }}.latest

      - name: Push Docker image to GitHub Container Registry
        run: |
          IMG=ghcr.io/${{ github.repository }}
          docker push $IMG:${{ env.version }}
          docker push $IMG:latest
          docker push $IMG:${{ env.version_major }}.${{ env.version_minor }}.latest
          docker push $IMG:${{ env.version_major }}.latest

      - name: Trigger release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            Release app version ${{ steps.version.outputs.version }}

